{"ast":null,"code":"var _jsxFileName = \"D:\\\\BUILDOUT_XSTOPWATCH\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isRunning, setIsRunning] = useState(false);\n  const [time, setTime] = useState(0); // Time in seconds\n  const [name, setName] = useState(\"Start\");\n  const handleClick = () => {\n    setIsRunning(!isRunning);\n    setName(isRunning ? \"Start\" : \"Stop\");\n  };\n  const handleReset = () => {\n    setIsRunning(false);\n    setName(\"Start\");\n    setTime(0);\n  };\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning]);\n\n  // Convert seconds to MM:SS format\n  const formatTime = seconds => {\n    const minutes = String(Math.floor(seconds / 60)).padStart(2, \"0\");\n    const secs = String(seconds % 60).padStart(2, \"0\");\n    return `${minutes}:${secs}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"StopWatch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Time: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatTime(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"p1jekQPZtzqak2xvrjNYw3pKDRQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","isRunning","setIsRunning","time","setTime","name","setName","handleClick","handleReset","interval","setInterval","prevTime","clearInterval","formatTime","seconds","minutes","String","Math","floor","padStart","secs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/BUILDOUT_XSTOPWATCH/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [isRunning, setIsRunning] = useState(false);\n  const [time, setTime] = useState(0); // Time in seconds\n  const [name, setName] = useState(\"Start\");\n\n  const handleClick = () => {\n    setIsRunning(!isRunning);\n    setName(isRunning ? \"Start\" : \"Stop\");\n  };\n\n  const handleReset = () => {\n    setIsRunning(false);\n    setName(\"Start\");\n    setTime(0);\n  };\n\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime + 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning]);\n\n  // Convert seconds to MM:SS format\n  const formatTime = (seconds) => {\n    const minutes = String(Math.floor(seconds / 60)).padStart(2, \"0\");\n    const secs = String(seconds % 60).padStart(2, \"0\");\n    return `${minutes}:${secs}`;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>StopWatch</h1>\n      <h4>\n        Time: <span>{formatTime(time)}</span>\n      </h4>\n      <button onClick={handleClick}>{name}</button>\n      <button onClick={handleReset}>Reset</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxBL,YAAY,CAAC,CAACD,SAAS,CAAC;IACxBK,OAAO,CAACL,SAAS,GAAG,OAAO,GAAG,MAAM,CAAC;EACvC,CAAC;EAED,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxBN,YAAY,CAAC,KAAK,CAAC;IACnBI,OAAO,CAAC,OAAO,CAAC;IAChBF,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAEDT,SAAS,CAAC,MAAM;IACd,IAAIc,QAAQ;IACZ,IAAIR,SAAS,EAAE;MACbQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BN,OAAO,CAAEO,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;MACrC,CAAC,EAAE,IAAI,CAAC;IACV;IACA,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACR,SAAS,CAAC,CAAC;;EAEf;EACA,MAAMY,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACC,KAAK,CAACJ,OAAO,GAAG,EAAE,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACjE,MAAMC,IAAI,GAAGJ,MAAM,CAACF,OAAO,GAAG,EAAE,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAClD,OAAO,GAAGJ,OAAO,IAAIK,IAAI,EAAE;EAC7B,CAAC;EAED,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBxB,OAAA;MAAAwB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB5B,OAAA;MAAAwB,QAAA,GAAI,QACI,eAAAxB,OAAA;QAAAwB,QAAA,EAAOT,UAAU,CAACV,IAAI;MAAC;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACL5B,OAAA;MAAQ6B,OAAO,EAAEpB,WAAY;MAAAe,QAAA,EAAEjB;IAAI;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAC7C5B,OAAA;MAAQ6B,OAAO,EAAEnB,WAAY;MAAAc,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAAC1B,EAAA,CA3CQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}